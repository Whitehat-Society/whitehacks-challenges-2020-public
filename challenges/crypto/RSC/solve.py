from Crypto.Util.number import long_to_bytes
import gmpy2 as gmpy

def nthroot(x, n):
    guess = 1 # Initial guess must be less than the result
    step = 1
    while 1:
        w = (guess+step)**n
        if w == x:
            return guess+step
        elif w < x:
            step <<= 1
        elif step == 1:
            return guess
        else:
            guess += step >> 1
            step = 1

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

n = 11221486953303479169418636958653777962386728091356875592462654735611792654962616720924881759568872511661747203368844081583564223606024702703957398828665129158363177792865136615710168537563842048353782583875449446010069016297453969147973960956159215562005875837895351452492570297884476840721412696164166045179843138435408476602958581054284009152430396325297356892528210363745353045269636158061363637600037031454774867796221323101685389216688943928402267875718382470111569241535645334550389269646665616886098195858557710728877438949506112533516698636281059854132213
e = 5
d = 6732892171982087501651182175192266777432036854814125355477592841367075592977570032554929055741323506997048322021306448950138534163614821622374439297199077495017906675719081969426101122538305229012269550325269667606041409778472381488784376573695529337203525502737210871495542178730558824632312574084674644545081770193320907439503715947344415483936903422993856602382705186317587030729648383485634907785026126569643652474133936358859331997044038343387674735923977599969664002365347535838521198156568052128032193326940060205853652198532764721618434504935483184209581
c = 5186367422103874157090916132632280469871488070367507139356845142093882635033592715570141522344578961127916716740707327801003444940780882832591040571543694610433978956607750610019346649502302981892861825108412103504559101570281780378069348779542080915902548029421012721550682007277631135919290523418366666400363413393180215601137752319079758397029847944474559557938050825239560862777837213217404830890765947951522619073240491299382567391929179295744685619035883778423271693460277199564254745454121960352229386151705327062275879238457321618893496060128827986777102


gs = gmpy.mpz(c)
gm = gmpy.mpz(n)
g3 = gmpy.mpz(e)

i = 0
while True:
	root, exact = gmpy.iroot(gs, g3)
	flag = long_to_bytes(int(root))
	print i
	i+=1
	gs += gm
	if "WH2020" in flag:
		print flag
		break
	
